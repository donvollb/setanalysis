---
format:
  pdf:
#    pdf-engine: xelatex
    pdf-engine: lualatex
#    template: "rmd-data/template.tex"
    template-partials: 
      - qmd-data/templates/before-title.tex
      - qmd-data/templates/before-body.tex
    mainfont: Red Hat Text # muss auf dem Rechner installiert sein! (bei Windows 10 für alle Benutzer)
#    mainfontoptions:
#      - Path = C:/Users/mikes/AppData/Local/Microsoft/Windows/Fonts/
#      - Path = "rmd-data/RedHatText/"
#      - BoldFont = RedHatText-Bold
#      - ItalicFont = RedHatText-Italic
#      - BoldItalicFont= RedHatText-Bolditalic
#      - Extension = .ttf 
#    keep-md: true
#    keep-tex: true
editor_options:                     
  chunk_output_type: console
lheadlogo: rmd-data/RPTU_Logo_line_3.png
rheadlogo: rmd-data/Logo_Schrift_blue_background.png
  # Kurztitel für linken Teil der Fußleiste
color: bluegray
  # alternativ kann man eigene Farben über \definecolor definieren und sie "maincolor" und "tablecolor" nennen.
  # mögliche Farben: bluegray, greengray, darkblue, lightblue, darkgreen, lightgreen, violett, pink, red, orange (RPTU-Standardfarben)
---

```{r}
#| label: setup
#| include: FALSE

### Unten links befindet sich der Dropdown navigator. Hiermit kannst du zwischen den Chunks und Überschriften switchen

# Oben im YAML bei "\definecolor{tablecolor}{RGB}{234,255,212}" die Werte in der geschweiften Klammer durch die richtige Farbe (siehe andere Farben) ersetzen

# ÄÖU richtig angezeigt? (Reopen with Encoding: UTF-8)

# FUNKTION DES CHUNKS:
# Pakete laden, Golbale Variablen setzen und Datensätze/Funktionsdatei einlesen

# Arbeitsverzeichnis
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))

#### A - PAKETE ####
#Mit der Pacman-Funktion werden die nötigen Pakete geladen und fehlende installiert. Bei Bedarf wird sie erweitert
suppressPackageStartupMessages(if(!require(pacman)){install.packages("pacman")})
pacman::p_load(dplyr, # Datenselektion
               tidyverse, # Datenselektion
               ggplot2, # Graphen
               #rgdal, # Brauchen wir das noch?
               Hmisc, # labels
               R6, # Objektorientiertes Programmieren, brauchen wir das noch?
               extrafont, # Schriftarten
               Cairo, # Für pdfs
               sjlabelled, # Für label-managemant
               kableExtra, # Für pdf-Tabellen
               DescTools, # Für statistische Analysen
               showtext, # Für Schriftart
               flextable, # Tabellen als Ersatz fuer Kable
               gdtools, # Schriftart registrieren fuer flextable
               officer # für Flextable Rahmenlinien
               #fontspec # für Schriftarten (bei Flextable erforderlich?)
               ) 

#### B - GLOBALE VARIABLEN ####

##### 1. Variable #####


###### Protokollvariable (nicht ändern, muss hier oben stehen!)
# Falls i existiert, was nur bei der AUtomatisierungsscheleife der Fall ist, wird das Protokoll mitgeschrieben
inkl.protokoll <- ifelse(exists("i"), TRUE, FALSE)

###### Modifizierbare Werte ######

# i Variable
i<-4
     # i beim Testen für den jeweiligen Bericht einstellen
     # i gibt die Zeile der personalized_info Datei an und steht für einen Bericht



# Berichtart Variable -> # LVE, ABS, STUD, SHOWUP? 
  bericht <- "LVE"
      # Um welchen Bericht handelt es sich? # Diese Variable wird gewählt um bspw. das Farbchema zu setzten
      # WICHTIG: Einhalten der Abkürzung!
  
  
# Kurztitel der Umfrage (für Fußzeile im Bericht)
lfoot <- "LVE-Bericht FB-Ebene | FB{`r FB.no`} | {`r Zeitraum.k`}" 
  

# Schnelles Überschreiben der Spaltenbreiten (kann im Normalfall so bleiben)
#  col.width3 <- c("305pt", "50pt", "30pt")
  col.width3 <- c(108, 18, 11)
#  col.width4 <- c("243pt", "50pt", "30pt", "50pt")
  col.width4 <- c(86, 18, 11, 18)
#  col.width.sm <- c("182pt", "30pt", "25pt", "25pt", "25pt", "25pt", "25pt")
  col.width.sm <- c(64, 11, 9, 9, 9, 9, 9)
  

###### Nicht-modifizierbare Werte (nur mit Bedacht ändern) ######


# anchor Variable für offene Variablen
  anchor.nr <- 0
       # Die anchor Vairable dient zu erstellen von Hyperlinks von offenen Fragen
  
# Environment für offene Fragen
  list.open <- new.env()
       # In die Environment werden offene Fragen gepackt
  
# Sub-Chunks Nummer
  sub.nr <- 0 # Für die fortlaufenden Titel der Subchunks, NICHT ÄNDERN!

# Schriftart
  font.family <- "Red+Hat+Text" # Auswahl der Schriftart, gleicher Name wie bei Google Fonts
  # bei Flextable in Funktionsdatei (Funktion lv.kable) muss der Name "Red Hat Text" lauten
   
  
  
##### 2. Farbsetting #####
  
#Farbe der Balken/Text, unbedingt einstellen! -> automatisiert

if (bericht == "LVE"){color.bars <- "#507289"} # blaugrau (Schiefer)
if (bericht == "ABS"){color.bars <- "#4c3575"} # violett (Pflaume)
if (bericht == "STUD"){color.bars <- "#77b6ba"} # grüngrau (Ozean)
if (bericht == "SHOWUP"){color.bars <- "#6ab2e7"} # hellblau (Tag)

  

##### 3. Einstellungen zu Grafiken #####
show.plot.mc <- FALSE # Sollen die Plots der MC-Fragen angezeigt werden?
show.plot.sc <- TRUE # Sollen die Plots der SC-Fragen angezeigt werden?
show.plot.sk <- TRUE  # Sollen die Plots der SK-Fragen angezeigt werden?



##### 4. Chunk Einstellungen ####

knitr::opts_chunk$set(
	comment = "",
	dev = "cairo_pdf",
	results = "asis",
	echo = FALSE,
	warning = FALSE,
	message = FALSE
)
options(knitr.duplicate.label = "allow") # sonst Probleme mit flextable_to_rmd()?

##### 5. Auswahl der Schriftart ####
# Prüfe, ob die gewählt Schriftart bereits in der Datenbank von {showtextdb} enthalten ist
# Installiere sie, falls nicht
if (!(font.family %in% showtextdb::font_installed())) {showtextdb::font_install(
  showtextdb::google_fonts(font.family))}
showtext::showtext_auto()

par(family = font.family) # Grafik Einstellungen auf Schriftart ändern
opar <- par() #Diese abspeichern

# Google Font für Flextable registrieren ("Red Hat Text")
gdtools::register_gfont(family = "Red Hat Text", subset = c("latin", "latin-ext"))
#gdtools::installed_gfonts() # "Red Hat Text" installiert
#gdtools::font_family_exists(font.family) # False, weil '+' statt Leerzeichen
#gdtools::font_family_exists("Red Hat Text") # True
# Problem: Flextable verwendet nicht die in font.family hinterlegte Schriftart



#### C - DATENSÄTZE UND FUNKTIONEN LADEN ####

# Daten einlesen


#load(file="./Daten/Basisdaten.rda")
#data -> data1
#data<-load(file="./Daten/LVEdataSoSe24.rda")
data_tmp<-load(file="./Daten/LVEdataSoSe24.rda")
data_tmp<-dataLVE
data<-load(file="./Daten/LVEdataSoSe24_final.rda")
data<-dataLVE

# Problem: Attribute fehlen beim finalen Datensatz vom 04.12.2024
# Fehlermeldung durch fehlende Labels in Chunks KF und sk5 KF5
# Kopieren der Attribute vom vorlaeufigen zum finalen Datensatz
# Chunk KF
attributes(data$KF_01) <- attributes(data_tmp$KF_01)
attributes(data$KF_02) <- attributes(data_tmp$KF_02)
attributes(data$KF_03) <- attributes(data_tmp$KF_03)
attributes(data$KFz_3_1N) <- attributes(data_tmp$KFz_3_1N)
attributes(data$KF_04) <- attributes(data_tmp$KF_04)
attributes(data$KFz_4_1N) <- attributes(data_tmp$KFz_4_1N)
attributes(data$KF_05) <- attributes(data_tmp$KF_05)
attributes(data$KF_06NN) <- attributes(data_tmp$KF_06NN)
attributes(data$KFz_8_2N) <- attributes(data_tmp$KFz_8_2N)
attributes(data$KFz_4_4NN) <- attributes(data_tmp$KFz_4_4NN)
attributes(data$KFz_4_3N) <- attributes(data_tmp$KFz_4_3N)
attributes(data$KFz_3_2) <- attributes(data_tmp$KFz_3_2)
# Chunk sk5 KF5
attributes(data$KF_09Anfo) <- attributes(data_tmp$KF_09Anfo)
attributes(data$KF_10) <- attributes(data_tmp$KF_10)
# vorlaeufigen Datensatz entfernen
rm(data_tmp)



# Kommentar MS 15.04.2024:
# Auskommentiert, um nur einen Bericht für den FB Psychologie zu erhalten,
# der sowohl Vorlesungen als auch Seminare/Übungen enthält
# folgende Reduktion der Lehrveranstaltungsarten wird deshalb nicht benötigt

#for (l in 1:nrow(data)) {
#  if (data$Teilbereich[l] == "Psychologie - WS2324" && data$Lehrveranstaltungsart[l] != "Vorlesung"){
#    data$Lehrveranstaltungsart[l] <- "Seminar oder Übung"
#  }
  
#}

# Kommentar MS: Teilbereich heisst im Datensatz 'Psychologie - WS2324' (vorher 'Psychologie'; korrigiert)
# table(dataLVE2$Lehrveranstaltungsart, dataLVE2$Teilbereich)
# table(data$Lehrveranstaltungsart, data$Teilbereich)
# Im Datensatz vorhandene Lehrveranstaltungsarten fuer Psychologie: 
# 17 Kolloquium
# 12 Projektseminar
# 709 Seminar
# 125 Uebung
# 682 Vorlesung

data$Kennung<-as.integer(data$Kennung)

#data <- sjlabelled::copy_labels(data, data2)

# Typokorrektur label (sollte man eigentlich in der Datenaufbereitung machen)
#attr(data$KF_06, "label") <- "Der/Die Lehrende verstand es, mein Interesse am Thema zu wecken."
#data$LV_Art <- gsub("Uebung", "Übung", data$LV_Art)

# Individuelle Info für Einzelberichte
#Info <- read.csv2("Tabellen/KO_STUD_2021.csv")

Info <- read_delim("Info.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)

# Funktionen laden
#devtools::source_url(url = "https://gitlab.rhrk.uni-kl.de/dvollbracht/scripts-evaluation/-/raw/dev/Funktionen_LE_all.R", 
#                     encoding = "UTF-8")
source("2024-11-05_Funktionen_LE_all_Quarto_Flextable.R") # am 14.10.2024 vom Link oben heruntergeladen und fuer Quarto angepasst

```

```{r}
#| label: inkl und platzhalter
#| include: FALSE

#+#################+#
#### PLATZHALTER ####
#+#################+#

Stichprobe  <- Info$Stichprobe.txt[i]
Campus      <- Info$Campus[i]
Zeitraum    <- Info$Zeitraum[i]
Zeitraum.k  <- Info$Zeitraum.krz[i]
FB_no       <- Info$FB.no[i]
FB_txt      <- Info$FB.txt[i]
Auswahl     <- Info$Auswahl[i]
```

```{r}
#| label: Datenselektion

# Daten kopieren, damit daraus nach dem Bilden der Teilmengen die Labels entnommen werden können 
data.copy <- data

# Daten des entsprechenden Fachbereichs wählen
data <- data[which(data$Teilbereich == FB_txt), ] #}

 # Bachelordatensatz: Nehme alle, die bei einer der Fragen zu Bachelorabschlüssen etwas angekreut haben
data.b <- data[which(data$StuAbschl_1 != 0 | 
                     data$StuAbschl_2 != 0 | 
                     data$StuAbschl_3 != 0 | 
                     data$StuAbschl_4 != 0), ]

# Masterdatensatz: Nehme alle, die bei einer der Fragen zu Masterabschlüssen etwas angekreut haben
data.m <- data[which(data$StuAbschl_5 != 0 | 
                     data$StuAbschl_6 != 0 | 
                     data$StuAbschl_7 != 0), ]


# Kommentar MS 15.04.2024:
# Auskommentiert, um nur einen Bericht für den FB Psychologie zu erhalten,
# der sowohl Vorlesungen als auch Seminare/Übungen enthält
#if(Auswahl == "PsychSÜ") {data <- data[data$Lehrveranstaltungsart == "Seminar oder Übung",]}
#if(Auswahl == "PsychV") {data <- data[data$Lehrveranstaltungsart == "Vorlesung",]}


# Übertrage die Labels
data <- sjlabelled::copy_labels(data, data.copy)

# Entferne die Kopie
rm(data.copy)

Info$N[i] <- nrow(data) # Anzahl der Personen dokumentieren

write_excel_csv2(Info, file="Info.csv", delim = ";") # die Datei wieder speichern
```

\lfoot{LVE-Bericht FB-Ebene | FB`r FB_no` | `r Zeitraum.k`}

\begin{center}
\begin{LARGE}
\textbf{Bericht der Lehrveranstaltungsevaluation~(LVE) auf Fachbereichs-Ebene}
\end{LARGE}
\begin{Large}

\end{Large}
\end{center}

\vspace{8mm}

\textbf{\Large{Stichprobenbeschreibung I}} \vspace{2mm}

Fachbereich: \tabto{3cm} \textit{`r Stichprobe`}

Campus: \tabto{3cm} \textit{`r Campus`}

Zeitraum: \tabto{3cm} \textit{`r Zeitraum`}

Fragebogen: \tabto{3cm} \textit{LVE Basis}

```{r}

# Kommentar MS 15.04.2024:
# Auskommentiert, um nur einen Bericht für den FB Psychologie zu erhalten,
# der sowohl Vorlesungen als auch Seminare/Übungen enthält

#(ifAuswahl == "PsychSÜ") {cat("Veranstaltungen: \\tabto{3cm} \\textit{Seminare und Übungen} \n \n")}
#if(Auswahl == "PsychV") {cat("Veranstaltungen: \\tabto{3cm} \\textit{Vorlesungen} \n \n")}
```

\vspace{12mm}

**Anzahl insgesamt erstellter LVE-Umfragen o.g. Zeitraums:** N~surveys~= `r Info$N.Umfragen.alle[i]`

**Anzahl LVE-Umfragen, die in diesen Bericht eingingen (Mindestrücklauf 3 Stimmen):** N~courses~= `r length(unique(data$Kennung))`

**Anzahl Stimmen, die in diesen Bericht eingingen:** N~votes~= `r nrow(data)`

\pagebreak

\setcounter{tocdepth}{2}
\renewcommand*\contentsname{INHALTSVERZEICHNIS}
\begingroup
\hypersetup{linkcolor=black}
\tableofcontents
\thispagestyle{fancy}
\endgroup

\pagebreak

\subsection{Allgemeine Angaben und Hinweise}

```{r}
#| label: legende tabelle
#| fig.height: 2.7
#| fig.width: 10
#| fig.align: center

cat("### Legende zu Tabellen  \n  \n")

# Beispiel Tabelle
jim <- as.data.frame(cbind("Frage", "Häufigkeit", "Mittelwert", "Standard-\nabweichung", "Median", "kleinster \nbeob. Wert", "größter \nbeob. Wert"))

colnames(jim) <- c("Item", "n", "M", "SD", "MD", "Min", "Max")

# print(lv.kable(jim, col.width = c("30pt", "50pt", "50pt", "60pt", "35pt", "60pt", "60pt"))) # bei Flextable kein "print" verwenden

lv.kable(jim, col.width = c(11, 18, 18, 22, 13, 22, 22)) # returns object 'latex.table'

```

-   *"Häufigkeit (n)"* - absolute Häufigkeit, Anzahl
-   *"NA"* - steht für fehlende Werte bzw. keine Angabe
-   *"Prozent (%)"* - prozentuale Häufigkeit, bezieht sich auf alle Werte inkl. NA
-   *"gültige %"* - prozentuale Häufigkeit bei Ausschluss von NA

### Zusätzliche Hinweise

-   Die hier präsentierten Angaben sind zumeist **aggregierte Mittelwerte pro LVE** (jede LV geht also mit Ihrem Mittelwert pro Item ein). 'N~courses~' gibt dabei an, wie viele LV-Mittelwerte wiederum jeweils zusammengefasst wurden.

-   Bei Fragen, die mit **eckigen Klammertermen beginnen** (z.B. \[F\], \[BSc\], \[MSc\]), handelt es sich um FILTERFRAGEN: je nach vorheriger Angabe also für die Teilnehmer der Online-Umfrage ggf. nicht sichtbar \[kummulierte Prozent deshalb möglicherweise \<100\].

-   Manche Fragen wurden im **Multiple-Choice-Format** (Mehrfachnennung möglich \[MC\]) programmiert, können also MEHRFACHANTWORTEN enthalten \[\~ kummulierte Prozent deshalb möglicherweise \>100\].

### Erläuterung zu Grafiken

Ein **Boxplot** (auch 'Box-Whisker-Plot', dt. Kastengrafik) ist ein Diagramm der Häufigkeitsverteilung, welches verschiedene Streuungs- und Lagemasse graphisch zusammenfasst. Der Boxplot besteht aus einer Box und 2 Linien ('Whisker', dt. Antennen genannt), die diese verlängern; der Strich in der Box repräsentiert den Median der Verteilung.

-   *Box*: Bereich, in dem die mittleren 50% der Daten liegen
-   *Median (MD)*: teilt das gesamte Diagramm in zwei Bereiche, in denen jeweils 50 % der Daten liegen
-   *Min/Max*: Ende des linken/rechten Whiskers (oder entferntester Ausreißer)

**Modus**: häufigste/r Angabe/Wert ~\[nicht in Beispiel-Abbildung!\]~

```{r}
#| label: Beispiel Boxplot
#| fig.height: 2.7
#| fig.width: 10
#| fig.align: center

#Daten für Beispiel Boxplot
bspdata <- c(2.1, 3.9, 3.9, 3.9, 3.9, 4.4, 4.4, 4.5, 4.5, 4.7, 4.7, 5, 5, 5.2, 5, 5.5, 5.5, 5.5, 5.5, 5.7, 5.7, 5.7, 5.7, 5.7)

bsp.boxplot(bspdata)
```

\pagebreak

```{r}
#| label: ruecklauf
#| fig.height: 2
#| fig.width: 6
#| fig.align: center

cat("\\subsection{Stichprobenbeschreibung II} \n")
cat("### Rücklauf  \n  \n")
#par(family = "Raleway")
#use_df_printer() # automatically print R data.frame as flextables
boxplot.ruecklauf(data$Teilnehmer, kennung = data$Kennung)
writeLines("\n")

cat("*HINWEIS: Die Berechnung des Rücklaufs basiert auf den Angaben zur Teilnehmendenzahl \nbei der Anmeldung zur LVE und **kann deshalb >100%** ausfallen!*  \n  \n")

cat("\\pagebreak")
```

```{r}
#| label: Fachsem
#| fig.height: 5
#| fig.width: 10
#| fig.align: center

# Falls es im Bericht nicht jeweils auf eine Seite passt: "fig.height" oben im Chunk auf "4" stellen 
# (oder alternativ in den Daten alles über einem bestimmten Fachsemester in "höher als" zusammenfassen)

merge.fachsem(data$FachSemN)
cat("\\pagebreak  \n  \n")

merge.fachsem(data.b$FachSemN, cutoff = 12, group = "b")
cat("\\pagebreak  \n  \n")

merge.fachsem(data.m$FachSemN, cutoff = 12, group = "m")
cat("\\pagebreak  \n  \n")

```

\subsection{Ergebnisdarstellung}

```{r}
#| label: KF
#| fig.align: center

cat("## Veranstaltungsbewertung Kernfragen  \n  \n")
cat("### Kernfragen: Items mit 6-stufiger Antwortskala  \n  \n")

# Falls man einen Fragetext ändern möchte (z.B. in Abkürzung)
# Hmisc::label(datensatz$beispiel) <- "" # In die Anführungsstriche neues Label (z.B. Abkürzung einfügen) 

tmp <- data[, c(
"KF_01",
"KF_02", 
"KF_03",
"KFz_3_1N",
"KF_04",
"KFz_4_1N",
"KF_05",
"KF_06NN",
"KFz_8_2N",
"KFz_4_4NN",
"KFz_4_3N",
"KFz_3_2")]

merge.multi.sk(tmp, # Objekt mit den Fragen
              kennung = data$Kennung, # Spalte aus Daten mit Kennungen
              number = 6,
              show.table = TRUE, # Soll eine Tabelle mit angezeigt werden? Default ist TRUE
              aggr = TRUE) #aggr = FALSE Sind die Daten bereits aggregiert? Default ist FALSE -> alte Funktionsdatei

cat("\\pagebreak  \n  \n")
```

```{r}
#| label: sk5 KF5
#| fig.align: center

cat("### Kernfragen: Items mit 5-stufiger Antwortskala  \n  \n")

merge.multi.sk(data$KF_09Anfo, number = 5, kennung = data$Kennung, aggr = TRUE)

cat("\n \\bigskip \n \\bigskip \n")

merge.multi.sk(data$KF_10, number = 5, kennung = data$Kennung, aggr = TRUE)

cat("\\pagebreak  \n  \n")
```

```{r}
#| label: grade
#| fig.align: center

cat("## Gesamtbewertung  \n  \n")

# Gesamtnote
grade(data$GES_Note2, kennung = data$Kennung, show.table = TRUE)

cat("\\pagebreak  \n  \n")
```

```{r}
#| label: wlpres
#| fig.align: center
#| fig.height: 3.5
#| fig.width: 7

cat("## Angaben zu Workload und Gruppengröße \n  \n")

merge.multi.sk(data$V3_B, kennung = data$Kennung, aggr = TRUE)
cat("\n \\bigskip \n \\bigskip \n")
merge.multi.sk(data$V3_C, kennung = data$Kennung, aggr = TRUE)

merge.sc(data$V3_D)
cat("\\pagebreak  \n  \n")
merge.sc(data$V3_E)
cat("\\pagebreak  \n  \n")
cat("### Zusätzlich zu Ihren Anwesenheitszeiten in der Veranstaltung: Wie viel Zeit (in Zeitstunden) haben Sie für die vorliegende Veranstaltung im Schnitt pro Woche aufgewendet? (ohne Prüfungsvorbereitung) \n \n")
merge.wl(ECTS = data$ECTS, WL = data$WL_01, kennung = data$Kennung)

cat("\n \\bigskip \n \n")
cat("### Zusätzlich zu der in vorheriger Frage (oben) angegebenen Zeit: Wie viel Zeit (in Zeitstunden) haben und werden Sie bezogen auf die vorliegende Veranstaltung für die Prüfungsvorbereitung insgesamt aufwenden? \n \n")

merge.wl(ECTS = data$ECTS, WL = data$WL_02, kennung = data$Kennung)
```

```{r}
#| label: Lehrpreis
#| fig.align: center

if (Auswahl != "Basis") {
cat("\\pagebreak  \n  \n")
cat("## Lehrpreis  \n  \n")

# Kommentar MS 15.04.2024:
# Für Fachbereich Psychologie keine separaten Berichte mehr
# für "Vorlesungen" und "Seminare und Übungen"
# deshalb if-Funktion folgend auskommentiert

#if (Auswahl =="PsychSÜ"){
#  tmp <- data[, c(
#  "LP8_1",
#  "LP8_2",
#  "LP8_3",
#  "LP8_4",
#  "LP8_5",
#  "LP8_S1",
#  "LP8_S2",
#  "LP8_S3",
#  "LP8_S4"
#  )
#]
#}

#if (Auswahl =="PsychV"){
#  tmp <- data[, c(
#  "LP8_1",
#  "LP8_2",
#  "LP8_3",
#  "LP8_4",
#  "LP8_5"
#  )
#]
#}


# Kommentar MS 15.04.2024:
# Für das Kapitel "Lehrpreis" im zusammengeführten Bericht werden folgend die
# 4 seminarspezifischen Items (LP8_S1 - LP8_S4) getrennt von den restlichen
# Items ausgegeben und erhalten einen entsprechenden Vermerk, dass sich
# die letzten 4 Items nur auf Seminare und Übungen beziehen

if (Auswahl == "Psych"){
  tmp <- data[, c(
  "LP8_1",
  "LP8_2",
  "LP8_3",
  "LP8_4",
  "LP8_5"
  )
  ]
}
merge.multi.sk(tmp, kennung = data$Kennung, number = 6, aggr = TRUE)

cat("\\pagebreak  \n  \n")
cat("### Nur für Seminare und Übungen  \n  \n")

if (Auswahl == "Psych"){
  tmp <- data[, c(
  "LP8_S1",
  "LP8_S2",
  "LP8_S3",
  "LP8_S4"
  )
  ]
}
merge.multi.sk(tmp, kennung = data$Kennung, number = 6, aggr = TRUE)



cat("\\pagebreak  \n  \n")
}
```
